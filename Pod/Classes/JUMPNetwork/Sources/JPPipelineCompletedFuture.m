/*
 * Copyright (c) 2011 - SEQOY.org and Paulo Oliveira ( http://www.seqoy.org )
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#import "JPPipelineCompletedFuture.h"

/// /// /// ////// ////// ////// ////// ////// ////// ////// ////// ////// ////// ////// ///
@implementation JPPipelineCompletedFuture

//// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// 
#pragma mark -
#pragma mark Init Methods. 
//// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// 
+(id)init {
	return [[self alloc] init];
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// //// 
#pragma mark -
#pragma mark Methods. 

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(BOOL)isDone {
	return YES;
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(BOOL)isCancelled {
	return NO;
}
		
//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(BOOL)isSuccess {
	return NO;
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(BOOL)isStarted {
	return NO;
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(BOOL)isFailed {
	return NO;
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(void)cancel {
	// Do nothing.
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(void)setStarted {
	// Do nothing.
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(void)setSuccess {
	// Do nothing.
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(NSError*)getCause {
	return nil;
}

//// //// //// //// //// //// //// //// //// //// //// //// //// //// ////
-(void)setFailure:(NSError*)cause {
	// Do nothing.
}

@end
